{"ast":null,"code":"import Constants from '../Constants';\nexport const getAllSource = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case Constants.GET_ALL_SOURCE_REQUEST:\n      {\n        return {\n          ...state,\n          Loading: true\n        };\n      }\n    case Constants.GET_ALL_SOURCE_SUCESS:\n      {\n        return {\n          ...state,\n          sourceList: action.data,\n          Loading: false\n        };\n      }\n    case Constants.GET_ALL_SOURCE_FAILED:\n      {\n        return {\n          ...state,\n          Error: '',\n          Loading: false\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport const addSource = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case Constants.ADD_SOURCE_REQUEST:\n      {\n        return {\n          ...state,\n          Loading: true\n        };\n      }\n    case Constants.ADD_SOURCE_SUCESS:\n      {\n        return {\n          ...state,\n          newSourceAdded: action.data,\n          Loading: false\n        };\n      }\n    case Constants.ADD_SOURCE_FAILED:\n      {\n        return {\n          ...state,\n          Error: '',\n          Loading: false\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport const updateSource = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case Constants.UPDATE_SOURCE_REQUEST:\n      {\n        return {\n          ...state,\n          Loading: true\n        };\n      }\n    case Constants.UPDATE_SOURCE_SUCESS:\n      {\n        return {\n          ...state,\n          sourceUpdated: action.data,\n          Loading: false\n        };\n      }\n    case Constants.UPDATE_SOURCE_FAILED:\n      {\n        return {\n          ...state,\n          Error: '',\n          Loading: false\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport const removedSource = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case Constants.REMOVE_SOURCE_REQUEST:\n      {\n        return {\n          ...state,\n          Loading: true\n        };\n      }\n    case Constants.REMOVE_SOURCE_SUCESS:\n      {\n        return {\n          ...state,\n          sourceRemoved: action.data,\n          Loading: false\n        };\n      }\n    case Constants.REMOVE_SOURCE_FAILED:\n      {\n        return {\n          ...state,\n          Error: '',\n          Loading: false\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["Constants","getAllSource","state","action","type","GET_ALL_SOURCE_REQUEST","Loading","GET_ALL_SOURCE_SUCESS","sourceList","data","GET_ALL_SOURCE_FAILED","Error","addSource","ADD_SOURCE_REQUEST","ADD_SOURCE_SUCESS","newSourceAdded","ADD_SOURCE_FAILED","updateSource","UPDATE_SOURCE_REQUEST","UPDATE_SOURCE_SUCESS","sourceUpdated","UPDATE_SOURCE_FAILED","removedSource","REMOVE_SOURCE_REQUEST","REMOVE_SOURCE_SUCESS","sourceRemoved","REMOVE_SOURCE_FAILED"],"sources":["G:/react/steelmart/src/Redux/Reducers/SourceReducer.js"],"sourcesContent":["import Constants from '../Constants'\r\nexport const getAllSource = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case Constants.GET_ALL_SOURCE_REQUEST: {\r\n            return { ...state, Loading: true }\r\n        }\r\n        case Constants.GET_ALL_SOURCE_SUCESS: {\r\n            return { ...state, sourceList: action.data, Loading: false }\r\n        }\r\n        case Constants.GET_ALL_SOURCE_FAILED: {\r\n            return { ...state, Error: '', Loading: false }\r\n        }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport const addSource = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case Constants.ADD_SOURCE_REQUEST: {\r\n            return { ...state, Loading: true }\r\n        }\r\n        case Constants.ADD_SOURCE_SUCESS: {\r\n            return { ...state, newSourceAdded: action.data, Loading: false }\r\n        }\r\n        case Constants.ADD_SOURCE_FAILED: {\r\n            return { ...state, Error: '', Loading: false }\r\n        }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport const updateSource = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case Constants.UPDATE_SOURCE_REQUEST: {\r\n            return { ...state, Loading: true }\r\n        }\r\n        case Constants.UPDATE_SOURCE_SUCESS: {\r\n            return { ...state, sourceUpdated: action.data, Loading: false }\r\n        }\r\n        case Constants.UPDATE_SOURCE_FAILED: {\r\n            return { ...state, Error: '', Loading: false }\r\n        }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport const removedSource = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case Constants.REMOVE_SOURCE_REQUEST: {\r\n            return { ...state, Loading: true }\r\n        }\r\n        case Constants.REMOVE_SOURCE_SUCESS: {\r\n            return { ...state, sourceRemoved: action.data, Loading: false }\r\n        }\r\n        case Constants.REMOVE_SOURCE_FAILED: {\r\n            return { ...state, Error: '', Loading: false }\r\n        }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,OAAO,MAAMC,YAAY,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,SAAS,CAACK,sBAAsB;MAAE;QACnC,OAAO;UAAE,GAAGH,KAAK;UAAEI,OAAO,EAAE;QAAK,CAAC;MACtC;IACA,KAAKN,SAAS,CAACO,qBAAqB;MAAE;QAClC,OAAO;UAAE,GAAGL,KAAK;UAAEM,UAAU,EAAEL,MAAM,CAACM,IAAI;UAAEH,OAAO,EAAE;QAAM,CAAC;MAChE;IACA,KAAKN,SAAS,CAACU,qBAAqB;MAAE;QAClC,OAAO;UAAE,GAAGR,KAAK;UAAES,KAAK,EAAE,EAAE;UAAEL,OAAO,EAAE;QAAM,CAAC;MAClD;IACA;MACI,OAAO;QAAE,GAAGJ;MAAM,CAAC;EAAA;AAE/B,CAAC;AAED,OAAO,MAAMU,SAAS,GAAG,YAAwB;EAAA,IAAvBV,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EACxC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,SAAS,CAACa,kBAAkB;MAAE;QAC/B,OAAO;UAAE,GAAGX,KAAK;UAAEI,OAAO,EAAE;QAAK,CAAC;MACtC;IACA,KAAKN,SAAS,CAACc,iBAAiB;MAAE;QAC9B,OAAO;UAAE,GAAGZ,KAAK;UAAEa,cAAc,EAAEZ,MAAM,CAACM,IAAI;UAAEH,OAAO,EAAE;QAAM,CAAC;MACpE;IACA,KAAKN,SAAS,CAACgB,iBAAiB;MAAE;QAC9B,OAAO;UAAE,GAAGd,KAAK;UAAES,KAAK,EAAE,EAAE;UAAEL,OAAO,EAAE;QAAM,CAAC;MAClD;IACA;MACI,OAAO;QAAE,GAAGJ;MAAM,CAAC;EAAA;AAE/B,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,YAAwB;EAAA,IAAvBf,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,SAAS,CAACkB,qBAAqB;MAAE;QAClC,OAAO;UAAE,GAAGhB,KAAK;UAAEI,OAAO,EAAE;QAAK,CAAC;MACtC;IACA,KAAKN,SAAS,CAACmB,oBAAoB;MAAE;QACjC,OAAO;UAAE,GAAGjB,KAAK;UAAEkB,aAAa,EAAEjB,MAAM,CAACM,IAAI;UAAEH,OAAO,EAAE;QAAM,CAAC;MACnE;IACA,KAAKN,SAAS,CAACqB,oBAAoB;MAAE;QACjC,OAAO;UAAE,GAAGnB,KAAK;UAAES,KAAK,EAAE,EAAE;UAAEL,OAAO,EAAE;QAAM,CAAC;MAClD;IACA;MACI,OAAO;QAAE,GAAGJ;MAAM,CAAC;EAAA;AAE/B,CAAC;AAED,OAAO,MAAMoB,aAAa,GAAG,YAAwB;EAAA,IAAvBpB,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,SAAS,CAACuB,qBAAqB;MAAE;QAClC,OAAO;UAAE,GAAGrB,KAAK;UAAEI,OAAO,EAAE;QAAK,CAAC;MACtC;IACA,KAAKN,SAAS,CAACwB,oBAAoB;MAAE;QACjC,OAAO;UAAE,GAAGtB,KAAK;UAAEuB,aAAa,EAAEtB,MAAM,CAACM,IAAI;UAAEH,OAAO,EAAE;QAAM,CAAC;MACnE;IACA,KAAKN,SAAS,CAAC0B,oBAAoB;MAAE;QACjC,OAAO;UAAE,GAAGxB,KAAK;UAAES,KAAK,EAAE,EAAE;UAAEL,OAAO,EAAE;QAAM,CAAC;MAClD;IACA;MACI,OAAO;QAAE,GAAGJ;MAAM,CAAC;EAAA;AAE/B,CAAC"},"metadata":{},"sourceType":"module"}